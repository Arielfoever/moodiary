// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AesEncryption>>
abstract class AesEncryption implements RustOpaqueInterface {
  /// 解密数据（去除冗余修剪）
  static Future<Uint8List> decrypt(
          {required List<int> key, required List<int> encryptedData}) =>
      RustLib.instance.api.crateApiAesAesEncryptionDecrypt(
          key: key, encryptedData: encryptedData);

  /// 派生密钥（确保输出32字节）
  static Future<Uint8List> deriveKey(
          {required String salt, required String userKey}) =>
      RustLib.instance.api
          .crateApiAesAesEncryptionDeriveKey(salt: salt, userKey: userKey);

  /// 加密数据（无克隆，直接操作所有权）
  static Future<Uint8List> encrypt(
          {required List<int> key, required List<int> data}) =>
      RustLib.instance.api
          .crateApiAesAesEncryptionEncrypt(key: key, data: data);
}
